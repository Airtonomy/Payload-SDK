version: 2.1
orbs:
  docker: circleci/docker@2.2.0
  cloudsmith: cloudsmith/cloudsmith@1.0.5

jobs:
  package:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    parameters:
      source-path:
        type: string
        default: Payload-SDK
      docker-build-image:
        type: string
        default: docker.cloudsmith.io/thread-one/release/flight-developer:23.25.1019
      package-repo-org:
        type: string
        default: thread-one
      package-repo:
        type: string
        default: dev
      package-format: 
        type: string
        default: deb
      package-distribution:
        type: string
        default: ubuntu/focal
      deb-path: 
        type: string
        default: ./*.deb
      resource_class:
        description: The architecture and size of the machine
        type: string

    steps:
      - checkout
      - run: 
          name: Fetch and Sync submodules
          command: | 
            echo ==========================================================
            echo Fetching Git Submodules
            echo ==========================================================
            git submodule sync --recursive
            git submodule update --recursive --init
      - docker/check:
          registry:  docker.cloudsmith.io
          docker-username: CLOUDSMITH_API_USER
          docker-password: CLOUDSMITH_API_KEY
      - cloudsmith/ensure-api-key
      - docker/pull:
          images: << parameters.docker-build-image >>
      - run:
          name: Build Debian Package
          command: |
            # calling make debian within the docker to build the package for deployment

            echo ==========================================================
            echo Really large build command
            echo ==========================================================
            # FIXME: Not doing one big line caused problems, investigate later for piecemeal configuration and building
            docker run -v ~/.ssh/:/root/.ssh -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent -v `pwd`:/workspace/src -w /workspace/src  << parameters.docker-build-image >> /bin/bash -c "\
            git config --global --add safe.directory /workspace/src && mkdir -p build && cd build && cmake .. --config=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=$(pwd)/install && cmake --build . --target all && cpack &&  mv ./install/*.deb /workspace/src/"

      - store_artifacts:
          path: dist  

      - cloudsmith/install-cli
      - cloudsmith/publish:
          cloudsmith-repository:  << parameters.package-repo-org >>/<< parameters.package-repo >>
          package-format: << parameters.package-format >>
          package-distribution: << parameters.package-distribution >>
          package-path: ~/project/<< parameters.deb-path >>

      - store_test_results:
          path: test_results
      - store_artifacts:
          path: dist  
workflows:
  development:
    jobs:
      - package:
          matrix:
            parameters:
              resource_class: [arm.xlarge, large]
          context:
            - cloudsmith-creds
          filters:
            branches:
              ignore: main
  release:
    jobs:
      - package: 
          matrix:
            parameters:
              resource_class: [arm.xlarge, large]
          package-repo: "public" 
          context:
            - cloudsmith-creds
          filters:
            branches:
              only: main
